// data url for datepicker's calendar icon
$bgURL: str-insert('data:image/svg+xml,%3Csvg%20fill%3D%22%23%22%20height%3D%2224%22%20viewBox%3D%220%200%2024%2024%22%20width%3D%2224%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%0A%20%20%20%20%3Cpath%20d%3D%22M9%2011H7v2h2v-2zm4%200h-2v2h2v-2zm4%200h-2v2h2v-2zm2-7h-1V2h-2v2H8V2H6v2H5c-1.11%200-1.99.9-1.99%202L3%2020c0%201.1.89%202%202%202h14c1.1%200%202-.9%202-2V6c0-1.1-.9-2-2-2zm0%2016H5V9h14v11z%22%2F%3E%0A%20%20%20%20%3Cpath%20d%3D%22M0%200h24v24H0z%22%20fill%3D%22none%22%2F%3E%0A%3C%2Fsvg%3E', str-slice(quote(mat-color($primary)), 2), 42);

label {
    .mat-input-container {
        width: inherit;
        .mat-input-wrapper {
            margin: 0;
            padding-bottom: 0;
            .mat-input-subscript-wrapper {
                margin-top: initial;
                padding-top: 6px;
            }
        }        
    }
}
button.mat-datepicker-toggle {
    background: url($bgURL) no-repeat;
    background-size: contain;
}
.mat-input-container {
    .mat-input-wrapper {
        margin-top: 0;
        .mat-input-element {
            box-sizing: border-box;
            height: $input-height-mob;
            font-size: $input-font-size-mob;
            padding-bottom: 8px;
            border: 0;
            border-bottom-width: 1px;
            border-bottom-style: solid;
            border-color: $default-border-color;
            vertical-align: baseline;
            &[readonly], &[disabled]:not([disabled="false"]) {
                border-style: dashed;
                border-color: $readonly-border-color;
            }
        }
        .mat-input-prefix, .mat-input-suffix {
            box-sizing: border-box;
            height: $input-height-mob;
            font-size: $input-font-size-mob;
            padding-bottom: 8px;
            border: 0;
            border-bottom-width: 1px;
            border-bottom-style: solid;
            border-color: $default-border-color;
            vertical-align: middle;
            line-height: 1;
            cursor: pointer;
            .mat-datepicker-toggle {
                width: 1.25rem;
                height: 1.25rem;
                margin-top: -4px;
            }            
        }
        .mat-input-placeholder-wrapper {
            height: $input-height-mob;
            .mat-input-placeholder {
                height: inherit;
                font-size: $input-font-size-mob;
                color: $placeholder-color;
            }
        }
        .error {
            position: absolute;
            width: 100%;
            overflow: hidden;
            color: map-get($warn,500);
            font-size: $error-font-size;
            margin-top: 6px;
        }
    }
    // focus border color for default
    &.mat-focused:not([dividercolor]) {
        .mat-input-wrapper {
            .mat-input-prefix, .mat-input-suffix {
                border-color: $focus-border-color;
            }        
            .mat-input-element {
                &:focus {
                    border-color: $focus-border-color;
                }
            }
        }
    }
    // focus border color for primary
    // and also if dividercolor value is not legitamate
    &.mat-focused[dividercolor] {
        .mat-input-wrapper {
            .mat-input-prefix, .mat-input-suffix {
                border-color: map-get($primary,500);
            }         
            .mat-input-element {
                &:focus {
                    border-color: map-get($primary,500);
                }
            }
        }
    }
    // focus border color for accent
    &.mat-focused[dividercolor="accent"] {
        .mat-input-wrapper {
            .mat-input-prefix, .mat-input-suffix {
                border-color: map-get($accent,500);
            }        
            .mat-input-element {
                &:focus {
                    border-color: map-get($accent,500);
                }
            }
        }
    }
    // focus border color for warn
    &.mat-focused[dividercolor="warn"] {
        .mat-input-wrapper {
            .mat-input-prefix, .mat-input-suffix {
                border-color: map-get($warn,500);
            }        
            .mat-input-element {
                &:focus {
                    border-color: map-get($warn,500);
                }
            }
        }
    }
    // for suffix and prefix
    // for no dividerColor or with dividerColor other than accent and warn
    &:not([dividercolor]), &[dividercolor] {
        .mat-input-wrapper {
            .mat-input-prefix, .mat-input-suffix {
                color: mat-color($primary);
            }
        }
    }
    // for accent
    &[dividercolor="accent"] {
        .mat-input-wrapper {
            .mat-input-prefix, .mat-input-suffix {
                color: mat-color($accent);
            }
        }
    }
    // for warn
    &[dividercolor="warn"] {
        .mat-input-wrapper {
            .mat-input-prefix, .mat-input-suffix {
                color: mat-color($warn);
            }
        }
    }
    // normal and focus border color for input with error
    &.ng-invalid {
        //first hide the hint messages
        .mat-input-hint-wrapper {
            display: none;
        }
        .mat-input-wrapper {
            .mat-input-prefix, .mat-input-suffix {
                border-color: map-get($warn,500);
            }        
            .mat-input-element, .mat-input-element:focus {
                border-color: map-get($warn,500);
            }
        }
    } 
    .mat-input-underline {
        visibility: hidden;
        .mat-input-ripple {
            display: none;
        }
    }
}

.mat-input-container {
    &:not([floatPlaceholder="never"]) {
        margin-top: 0.5em;
        .mat-input-placeholder-wrapper {
            overflow: initial;
        }
    }
    &.mat-focused .mat-input-placeholder.mat-float, .mat-input-placeholder.mat-float:not(.mat-empty) {
        display: block;
        transform: translate3d(0, -0.62rem, 0);
        font-size: 0.625rem;
        color: map-get($accent,700);
        max-width: 100%;
        transition: transform .4s cubic-bezier(.25,.8,.25,1),color .4s cubic-bezier(.25,.8,.25,1),width .4s cubic-bezier(.25,.8,.25,1);
    }
}

@media only screen and (min-width: breakpoint-min(sm)) {
    .mat-input-container {
        .mat-input-wrapper {
            .mat-input-prefix, .mat-input-suffix {
                .mat-datepicker-toggle {
                    margin-top: 0;
                }            
            }        
            .mat-input-prefix, .mat-input-element,
            .mat-input-suffix {
                height: $input-height-desk;
                padding-bottom: initial;
                font-size: $input-font-size-desk;
                border-width: 1px;
                border-style: solid;
            }
            .mat-input-prefix {
                padding-left: $input-pad-lr-desk;
                padding-right: 0;
            }
            .mat-input-suffix {
                padding-left: 0;
                padding-right: $input-pad-lr-desk;
            }
            .mat-input-element {
                padding-left: $input-pad-lr-desk;
                padding-right: $input-pad-lr-desk;
            }
            .mat-input-prefix {
                border-right: 0;
            }
            .mat-input-suffix {
                border-left: 0;
            }
            .mat-input-prefix + .mat-input-infix > .mat-input-element {
                border-left: 0;
            }
            .mat-input-table .mat-input-infix:not(:last-child) > .mat-input-element {
                border-right: 0;
            }
            .mat-input-placeholder-wrapper {
                height: $input-height-desk;
                .mat-input-placeholder {
                    height: inherit;
                    line-height: $input-height-desk;
                    margin-top: initial;
                    padding-left: $input-pad-lr-desk + 0.1rem;
                    padding-right: $input-pad-lr-desk + 0.1rem;
                    font-size: $input-font-size-desk;
                }
            }
        }        
        &.mat-focused .mat-input-placeholder.mat-float, .mat-input-placeholder.mat-float:not(.mat-empty) {
            transform: translate3d(-0.875rem, -1.625rem, 0);
            font-size: 0.625rem;
        }
    }
}